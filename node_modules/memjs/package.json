{
  "author": {
    "name": "Amit Levy"
  },
  "name": "memjs",
  "description": "A memcache client for node using the binary protocol and SASL authentication",
  "version": "0.1.0",
  "homepage": "http://github.com/alevy/memjs",
  "repository": {
    "type": "git",
    "url": "git://github.com/alevy/memjs.git"
  },
  "engines": {
    "node": "~v0.6.18"
  },
  "main": "./client",
  "scripts": {
    "test": "expresso test/*.js",
    "start": "node server.js"
  },
  "dependencies": {},
  "devDependencies": {
    "expresso": "0.9.2"
  },
  "readme": "MemJS [![Build Status](https://secure.travis-ci.org/alevy/memjs.png)](http://travis-ci.org/alevy/memjs)\n=====\n\nMemJS is a pure Node.js client library for accessing the\n[MemCachier](http://memcachier.com/) service and other memcache servers. It\nuses the binary protocol and support SASL authentication.\n\n## Supported Node.js versions ##\n\nMemJS is tested to work with version 0.6 or higher of Node.js.\n\n## Installation ##\n\nMemJS is available from the npm registry:\n\n    $ npm install memjs\n\nTo install from git:\n\n    $ git clone git://github.com/alevy/memjs.git\n    $ cd memjs\n    $ npm link\n\nMemJS was designed for the MemCachier memcache service but will work with any\nmemcache server that speaks the binary protocol. Many software repositories\nhave a version of memcacached available for installation:\n\n### Ubuntu ###\n\n    $ apt-get install memcached\n\n### OS X ###\n\n    $ brew install memcached\n\n## Usage ##\n\nYou can start using MemJS immediately from the node console:\n\n    $ var memjs = require('memjs')\n    $ var client = memjs.Client.create()\n    $ client.set('hello')\n\n## Configuration ##\n\nMemJS understands the following environment variables:\n\n* `MEMCACHIER_SERVERS` - used to determine which servers to connect to. Should be a comma separated list of _[hostname:port]_.\n* `MEMCACHIER_USERNAME` - if present with `MEMCACHIER_PASSWORD`, MemJS will try to authenticated to the server using SASL.\n* `MEMCACHIER_PASSWORD` - if present with `MEMCACHIER_USERNAME`, MemJS will try to authenticated to the server using SASL.\n* `MEMCACHE_USERNAME` - used if `MEMCACHIER_USERNAME` is not present\n* `MEMCACHE_PASSWORD` - used if `MEMCACHIER_PASSWORD` is not present\n\nEnvironment variables are only used as a fallback for explicit parameters.\n\n## TODOS ##\n\n* Handle socket errors and retries\n* Add more commands (add, replace, delete, increment, decrement, flush)\n* Support expiration and flags\n* Support CAS\n\n## Copyright ##\n\nCopyright (c) 2012 Amit Levy, MemCachier. See LICENSE for details.",
  "readmeFilename": "README.md",
  "_id": "memjs@0.1.0",
  "dist": {
    "shasum": "c0bd11cce469895b8e09cf67e27fa7a32b946b20"
  },
  "_from": "memjs@0.1.x"
}
